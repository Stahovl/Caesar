### YamlMime:ManagedReference
items:
- uid: Caesar.Core.Interfaces.IReservationRepository
  commentId: T:Caesar.Core.Interfaces.IReservationRepository
  id: IReservationRepository
  parent: Caesar.Core.Interfaces
  children:
  - Caesar.Core.Interfaces.IReservationRepository.AddAsync(Caesar.Core.Entities.Reservation)
  - Caesar.Core.Interfaces.IReservationRepository.DeleteAsync(System.Int32)
  - Caesar.Core.Interfaces.IReservationRepository.GetAllAsync
  - Caesar.Core.Interfaces.IReservationRepository.GetByIdAsync(System.Int32)
  - Caesar.Core.Interfaces.IReservationRepository.UpdateAsync(Caesar.Core.Entities.Reservation)
  langs:
  - csharp
  - vb
  name: IReservationRepository
  nameWithType: IReservationRepository
  fullName: Caesar.Core.Interfaces.IReservationRepository
  type: Interface
  source:
    remote:
      path: Caesar.Core/Interfaces/IReservationRepository.cs
      branch: master
      repo: https://github.com/Stahovl/Caesar.git
    id: IReservationRepository
    path: Caesar.Core/Interfaces/IReservationRepository.cs
    startLine: 4
  assemblies:
  - Caesar.Core
  namespace: Caesar.Core.Interfaces
  syntax:
    content: public interface IReservationRepository
    content.vb: Public Interface IReservationRepository
- uid: Caesar.Core.Interfaces.IReservationRepository.GetByIdAsync(System.Int32)
  commentId: M:Caesar.Core.Interfaces.IReservationRepository.GetByIdAsync(System.Int32)
  id: GetByIdAsync(System.Int32)
  parent: Caesar.Core.Interfaces.IReservationRepository
  langs:
  - csharp
  - vb
  name: GetByIdAsync(int)
  nameWithType: IReservationRepository.GetByIdAsync(int)
  fullName: Caesar.Core.Interfaces.IReservationRepository.GetByIdAsync(int)
  type: Method
  source:
    remote:
      path: Caesar.Core/Interfaces/IReservationRepository.cs
      branch: master
      repo: https://github.com/Stahovl/Caesar.git
    id: GetByIdAsync
    path: Caesar.Core/Interfaces/IReservationRepository.cs
    startLine: 6
  assemblies:
  - Caesar.Core
  namespace: Caesar.Core.Interfaces
  syntax:
    content: Task<Reservation> GetByIdAsync(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{Caesar.Core.Entities.Reservation}
    content.vb: Function GetByIdAsync(id As Integer) As Task(Of Reservation)
  overload: Caesar.Core.Interfaces.IReservationRepository.GetByIdAsync*
  nameWithType.vb: IReservationRepository.GetByIdAsync(Integer)
  fullName.vb: Caesar.Core.Interfaces.IReservationRepository.GetByIdAsync(Integer)
  name.vb: GetByIdAsync(Integer)
- uid: Caesar.Core.Interfaces.IReservationRepository.GetAllAsync
  commentId: M:Caesar.Core.Interfaces.IReservationRepository.GetAllAsync
  id: GetAllAsync
  parent: Caesar.Core.Interfaces.IReservationRepository
  langs:
  - csharp
  - vb
  name: GetAllAsync()
  nameWithType: IReservationRepository.GetAllAsync()
  fullName: Caesar.Core.Interfaces.IReservationRepository.GetAllAsync()
  type: Method
  source:
    remote:
      path: Caesar.Core/Interfaces/IReservationRepository.cs
      branch: master
      repo: https://github.com/Stahovl/Caesar.git
    id: GetAllAsync
    path: Caesar.Core/Interfaces/IReservationRepository.cs
    startLine: 7
  assemblies:
  - Caesar.Core
  namespace: Caesar.Core.Interfaces
  syntax:
    content: Task<IEnumerable<Reservation>> GetAllAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Caesar.Core.Entities.Reservation}}
    content.vb: Function GetAllAsync() As Task(Of IEnumerable(Of Reservation))
  overload: Caesar.Core.Interfaces.IReservationRepository.GetAllAsync*
- uid: Caesar.Core.Interfaces.IReservationRepository.AddAsync(Caesar.Core.Entities.Reservation)
  commentId: M:Caesar.Core.Interfaces.IReservationRepository.AddAsync(Caesar.Core.Entities.Reservation)
  id: AddAsync(Caesar.Core.Entities.Reservation)
  parent: Caesar.Core.Interfaces.IReservationRepository
  langs:
  - csharp
  - vb
  name: AddAsync(Reservation)
  nameWithType: IReservationRepository.AddAsync(Reservation)
  fullName: Caesar.Core.Interfaces.IReservationRepository.AddAsync(Caesar.Core.Entities.Reservation)
  type: Method
  source:
    remote:
      path: Caesar.Core/Interfaces/IReservationRepository.cs
      branch: master
      repo: https://github.com/Stahovl/Caesar.git
    id: AddAsync
    path: Caesar.Core/Interfaces/IReservationRepository.cs
    startLine: 8
  assemblies:
  - Caesar.Core
  namespace: Caesar.Core.Interfaces
  syntax:
    content: Task<Reservation> AddAsync(Reservation reservation)
    parameters:
    - id: reservation
      type: Caesar.Core.Entities.Reservation
    return:
      type: System.Threading.Tasks.Task{Caesar.Core.Entities.Reservation}
    content.vb: Function AddAsync(reservation As Reservation) As Task(Of Reservation)
  overload: Caesar.Core.Interfaces.IReservationRepository.AddAsync*
- uid: Caesar.Core.Interfaces.IReservationRepository.UpdateAsync(Caesar.Core.Entities.Reservation)
  commentId: M:Caesar.Core.Interfaces.IReservationRepository.UpdateAsync(Caesar.Core.Entities.Reservation)
  id: UpdateAsync(Caesar.Core.Entities.Reservation)
  parent: Caesar.Core.Interfaces.IReservationRepository
  langs:
  - csharp
  - vb
  name: UpdateAsync(Reservation)
  nameWithType: IReservationRepository.UpdateAsync(Reservation)
  fullName: Caesar.Core.Interfaces.IReservationRepository.UpdateAsync(Caesar.Core.Entities.Reservation)
  type: Method
  source:
    remote:
      path: Caesar.Core/Interfaces/IReservationRepository.cs
      branch: master
      repo: https://github.com/Stahovl/Caesar.git
    id: UpdateAsync
    path: Caesar.Core/Interfaces/IReservationRepository.cs
    startLine: 9
  assemblies:
  - Caesar.Core
  namespace: Caesar.Core.Interfaces
  syntax:
    content: Task UpdateAsync(Reservation reservation)
    parameters:
    - id: reservation
      type: Caesar.Core.Entities.Reservation
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function UpdateAsync(reservation As Reservation) As Task
  overload: Caesar.Core.Interfaces.IReservationRepository.UpdateAsync*
- uid: Caesar.Core.Interfaces.IReservationRepository.DeleteAsync(System.Int32)
  commentId: M:Caesar.Core.Interfaces.IReservationRepository.DeleteAsync(System.Int32)
  id: DeleteAsync(System.Int32)
  parent: Caesar.Core.Interfaces.IReservationRepository
  langs:
  - csharp
  - vb
  name: DeleteAsync(int)
  nameWithType: IReservationRepository.DeleteAsync(int)
  fullName: Caesar.Core.Interfaces.IReservationRepository.DeleteAsync(int)
  type: Method
  source:
    remote:
      path: Caesar.Core/Interfaces/IReservationRepository.cs
      branch: master
      repo: https://github.com/Stahovl/Caesar.git
    id: DeleteAsync
    path: Caesar.Core/Interfaces/IReservationRepository.cs
    startLine: 10
  assemblies:
  - Caesar.Core
  namespace: Caesar.Core.Interfaces
  syntax:
    content: Task DeleteAsync(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteAsync(id As Integer) As Task
  overload: Caesar.Core.Interfaces.IReservationRepository.DeleteAsync*
  nameWithType.vb: IReservationRepository.DeleteAsync(Integer)
  fullName.vb: Caesar.Core.Interfaces.IReservationRepository.DeleteAsync(Integer)
  name.vb: DeleteAsync(Integer)
references:
- uid: Caesar.Core.Interfaces
  commentId: N:Caesar.Core.Interfaces
  href: Caesar.html
  name: Caesar.Core.Interfaces
  nameWithType: Caesar.Core.Interfaces
  fullName: Caesar.Core.Interfaces
  spec.csharp:
  - uid: Caesar
    name: Caesar
    href: Caesar.html
  - name: .
  - uid: Caesar.Core
    name: Core
    href: Caesar.Core.html
  - name: .
  - uid: Caesar.Core.Interfaces
    name: Interfaces
    href: Caesar.Core.Interfaces.html
  spec.vb:
  - uid: Caesar
    name: Caesar
    href: Caesar.html
  - name: .
  - uid: Caesar.Core
    name: Core
    href: Caesar.Core.html
  - name: .
  - uid: Caesar.Core.Interfaces
    name: Interfaces
    href: Caesar.Core.Interfaces.html
- uid: Caesar.Core.Interfaces.IReservationRepository.GetByIdAsync*
  commentId: Overload:Caesar.Core.Interfaces.IReservationRepository.GetByIdAsync
  href: Caesar.Core.Interfaces.IReservationRepository.html#Caesar_Core_Interfaces_IReservationRepository_GetByIdAsync_System_Int32_
  name: GetByIdAsync
  nameWithType: IReservationRepository.GetByIdAsync
  fullName: Caesar.Core.Interfaces.IReservationRepository.GetByIdAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{Caesar.Core.Entities.Reservation}
  commentId: T:System.Threading.Tasks.Task{Caesar.Core.Entities.Reservation}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Reservation>
  nameWithType: Task<Reservation>
  fullName: System.Threading.Tasks.Task<Caesar.Core.Entities.Reservation>
  nameWithType.vb: Task(Of Reservation)
  fullName.vb: System.Threading.Tasks.Task(Of Caesar.Core.Entities.Reservation)
  name.vb: Task(Of Reservation)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Caesar.Core.Entities.Reservation
    name: Reservation
    href: Caesar.Core.Entities.Reservation.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Caesar.Core.Entities.Reservation
    name: Reservation
    href: Caesar.Core.Entities.Reservation.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Caesar.Core.Interfaces.IReservationRepository.GetAllAsync*
  commentId: Overload:Caesar.Core.Interfaces.IReservationRepository.GetAllAsync
  href: Caesar.Core.Interfaces.IReservationRepository.html#Caesar_Core_Interfaces_IReservationRepository_GetAllAsync
  name: GetAllAsync
  nameWithType: IReservationRepository.GetAllAsync
  fullName: Caesar.Core.Interfaces.IReservationRepository.GetAllAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Caesar.Core.Entities.Reservation}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Caesar.Core.Entities.Reservation}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<Reservation>>
  nameWithType: Task<IEnumerable<Reservation>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Caesar.Core.Entities.Reservation>>
  nameWithType.vb: Task(Of IEnumerable(Of Reservation))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Caesar.Core.Entities.Reservation))
  name.vb: Task(Of IEnumerable(Of Reservation))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Caesar.Core.Entities.Reservation
    name: Reservation
    href: Caesar.Core.Entities.Reservation.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Caesar.Core.Entities.Reservation
    name: Reservation
    href: Caesar.Core.Entities.Reservation.html
  - name: )
  - name: )
- uid: Caesar.Core.Interfaces.IReservationRepository.AddAsync*
  commentId: Overload:Caesar.Core.Interfaces.IReservationRepository.AddAsync
  href: Caesar.Core.Interfaces.IReservationRepository.html#Caesar_Core_Interfaces_IReservationRepository_AddAsync_Caesar_Core_Entities_Reservation_
  name: AddAsync
  nameWithType: IReservationRepository.AddAsync
  fullName: Caesar.Core.Interfaces.IReservationRepository.AddAsync
- uid: Caesar.Core.Entities.Reservation
  commentId: T:Caesar.Core.Entities.Reservation
  parent: Caesar.Core.Entities
  href: Caesar.Core.Entities.Reservation.html
  name: Reservation
  nameWithType: Reservation
  fullName: Caesar.Core.Entities.Reservation
- uid: Caesar.Core.Entities
  commentId: N:Caesar.Core.Entities
  href: Caesar.html
  name: Caesar.Core.Entities
  nameWithType: Caesar.Core.Entities
  fullName: Caesar.Core.Entities
  spec.csharp:
  - uid: Caesar
    name: Caesar
    href: Caesar.html
  - name: .
  - uid: Caesar.Core
    name: Core
    href: Caesar.Core.html
  - name: .
  - uid: Caesar.Core.Entities
    name: Entities
    href: Caesar.Core.Entities.html
  spec.vb:
  - uid: Caesar
    name: Caesar
    href: Caesar.html
  - name: .
  - uid: Caesar.Core
    name: Core
    href: Caesar.Core.html
  - name: .
  - uid: Caesar.Core.Entities
    name: Entities
    href: Caesar.Core.Entities.html
- uid: Caesar.Core.Interfaces.IReservationRepository.UpdateAsync*
  commentId: Overload:Caesar.Core.Interfaces.IReservationRepository.UpdateAsync
  href: Caesar.Core.Interfaces.IReservationRepository.html#Caesar_Core_Interfaces_IReservationRepository_UpdateAsync_Caesar_Core_Entities_Reservation_
  name: UpdateAsync
  nameWithType: IReservationRepository.UpdateAsync
  fullName: Caesar.Core.Interfaces.IReservationRepository.UpdateAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Caesar.Core.Interfaces.IReservationRepository.DeleteAsync*
  commentId: Overload:Caesar.Core.Interfaces.IReservationRepository.DeleteAsync
  href: Caesar.Core.Interfaces.IReservationRepository.html#Caesar_Core_Interfaces_IReservationRepository_DeleteAsync_System_Int32_
  name: DeleteAsync
  nameWithType: IReservationRepository.DeleteAsync
  fullName: Caesar.Core.Interfaces.IReservationRepository.DeleteAsync
