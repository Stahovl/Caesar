{
  "Caesar.Web/wwwroot/lib/jquery-validation/LICENSE.html": {
    "href": "Caesar.Web/wwwroot/lib/jquery-validation/LICENSE.html",
    "title": "The MIT License (MIT) | docfx docfx.json --serve",
    "keywords": "The MIT License (MIT) Copyright JÃ¶rn Zaefferer Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "README.html": {
    "href": "README.html",
    "title": "Caesar | docfx docfx.json --serve",
    "keywords": "Caesar"
  },
  "api/Caesar.API.Controllers.AuthController.html": {
    "href": "api/Caesar.API.Controllers.AuthController.html",
    "title": "Class AuthController | docfx docfx.json --serve",
    "keywords": "Class AuthController Namespace Caesar.API.Controllers Assembly Caesar.API.dll [ApiController] [Route(\"api/[controller]\")] public class AuthController : ControllerBase Inheritance object ControllerBase AuthController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthController(IAuthService, ILogger<AuthController>) public AuthController(IAuthService authService, ILogger<AuthController> logger) Parameters authService IAuthService logger ILogger<AuthController> Methods Login(LoginModel) [HttpPost(\"login\")] public Task<IActionResult> Login(LoginModel model) Parameters model LoginModel Returns Task<IActionResult>"
  },
  "api/Caesar.API.Controllers.LoginModel.html": {
    "href": "api/Caesar.API.Controllers.LoginModel.html",
    "title": "Class LoginModel | docfx docfx.json --serve",
    "keywords": "Class LoginModel Namespace Caesar.API.Controllers Assembly Caesar.API.dll public class LoginModel Inheritance object LoginModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Password public string Password { get; set; } Property Value string Username public string Username { get; set; } Property Value string"
  },
  "api/Caesar.API.Controllers.MenuItemsController.html": {
    "href": "api/Caesar.API.Controllers.MenuItemsController.html",
    "title": "Class MenuItemsController | docfx docfx.json --serve",
    "keywords": "Class MenuItemsController Namespace Caesar.API.Controllers Assembly Caesar.API.dll [Authorize] [ApiController] [Route(\"api/[controller]\")] public class MenuItemsController : ControllerBase Inheritance object ControllerBase MenuItemsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MenuItemsController(IMenuItemService, ILogger<MenuItemsController>) public MenuItemsController(IMenuItemService menuItemService, ILogger<MenuItemsController> logger) Parameters menuItemService IMenuItemService logger ILogger<MenuItemsController> Methods CreateMenuItem(MenuItemDto) [HttpPost] public Task<ActionResult<MenuItemDto>> CreateMenuItem(MenuItemDto menuItemDto) Parameters menuItemDto MenuItemDto Returns Task<ActionResult<MenuItemDto>> DeleteMenuItem(int) [HttpDelete(\"{id}\")] public Task<IActionResult> DeleteMenuItem(int id) Parameters id int Returns Task<IActionResult> GetMenuItem() [HttpGet] public Task<ActionResult<IEnumerable<MenuItemDto>>> GetMenuItem() Returns Task<ActionResult<IEnumerable<MenuItemDto>>> GetMenuItem(int) [HttpGet(\"{id}\")] public Task<ActionResult<MenuItemDto>> GetMenuItem(int id) Parameters id int Returns Task<ActionResult<MenuItemDto>> UpdateMenuItem(int, MenuItemDto) [HttpPut(\"{id}\")] public Task<IActionResult> UpdateMenuItem(int id, MenuItemDto menuItemDto) Parameters id int menuItemDto MenuItemDto Returns Task<IActionResult>"
  },
  "api/Caesar.API.Controllers.ReservationsController.html": {
    "href": "api/Caesar.API.Controllers.ReservationsController.html",
    "title": "Class ReservationsController | docfx docfx.json --serve",
    "keywords": "Class ReservationsController Namespace Caesar.API.Controllers Assembly Caesar.API.dll [ApiController] [Route(\"/api/[controller]\")] public class ReservationsController : ControllerBase Inheritance object ControllerBase ReservationsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ReservationsController(IReservationService) public ReservationsController(IReservationService reservationService) Parameters reservationService IReservationService Methods CreateReservation(ReservationDto) [HttpPost] public Task<ActionResult<ReservationDto>> CreateReservation(ReservationDto reservationDto) Parameters reservationDto ReservationDto Returns Task<ActionResult<ReservationDto>> DeleteReservation(int) [HttpDelete(\"{id}\")] public Task<IActionResult> DeleteReservation(int id) Parameters id int Returns Task<IActionResult> GetReservation(int) [HttpGet(\"{id}\")] public Task<ActionResult<ReservationDto>> GetReservation(int id) Parameters id int Returns Task<ActionResult<ReservationDto>> GetReservations() [HttpGet] public Task<ActionResult<IEnumerable<ReservationDto>>> GetReservations() Returns Task<ActionResult<IEnumerable<ReservationDto>>> UpdateReservation(int, ReservationDto) [HttpPut(\"{id}\")] public Task<IActionResult> UpdateReservation(int id, ReservationDto reservationDto) Parameters id int reservationDto ReservationDto Returns Task<IActionResult>"
  },
  "api/Caesar.API.Controllers.html": {
    "href": "api/Caesar.API.Controllers.html",
    "title": "Namespace Caesar.API.Controllers | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.API.Controllers Classes AuthController LoginModel MenuItemsController ReservationsController"
  },
  "api/Caesar.API.Middleware.GlobalExceptionHandler.html": {
    "href": "api/Caesar.API.Middleware.GlobalExceptionHandler.html",
    "title": "Class GlobalExceptionHandler | docfx docfx.json --serve",
    "keywords": "Class GlobalExceptionHandler Namespace Caesar.API.Middleware Assembly Caesar.API.dll public class GlobalExceptionHandler : IExceptionFilter, IFilterMetadata Inheritance object GlobalExceptionHandler Implements IExceptionFilter IFilterMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GlobalExceptionHandler(ILogger<GlobalExceptionHandler>) public GlobalExceptionHandler(ILogger<GlobalExceptionHandler> logger) Parameters logger ILogger<GlobalExceptionHandler> Methods OnException(ExceptionContext) Called after an action has thrown an Exception. public void OnException(ExceptionContext context) Parameters context ExceptionContext The ExceptionContext."
  },
  "api/Caesar.API.Middleware.html": {
    "href": "api/Caesar.API.Middleware.html",
    "title": "Namespace Caesar.API.Middleware | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.API.Middleware Classes GlobalExceptionHandler"
  },
  "api/Caesar.API.Program.html": {
    "href": "api/Caesar.API.Program.html",
    "title": "Class Program | docfx docfx.json --serve",
    "keywords": "Class Program Namespace Caesar.API Assembly Caesar.API.dll public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Main(string[]) public static void Main(string[] args) Parameters args string[]"
  },
  "api/Caesar.API.Validators.MenuItemDtoValidator.html": {
    "href": "api/Caesar.API.Validators.MenuItemDtoValidator.html",
    "title": "Class MenuItemDtoValidator | docfx docfx.json --serve",
    "keywords": "Class MenuItemDtoValidator Namespace Caesar.API.Validators Assembly Caesar.API.dll public class MenuItemDtoValidator : AbstractValidator<MenuItemDto>, IValidator<MenuItemDto>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<MenuItemDto> MenuItemDtoValidator Implements IValidator<MenuItemDto> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<MenuItemDto>.Validate(MenuItemDto) AbstractValidator<MenuItemDto>.ValidateAsync(MenuItemDto, CancellationToken) AbstractValidator<MenuItemDto>.Validate(ValidationContext<MenuItemDto>) AbstractValidator<MenuItemDto>.ValidateAsync(ValidationContext<MenuItemDto>, CancellationToken) AbstractValidator<MenuItemDto>.CreateDescriptor() AbstractValidator<MenuItemDto>.RuleFor<TProperty>(Expression<Func<MenuItemDto, TProperty>>) AbstractValidator<MenuItemDto>.Transform<TProperty, TTransformed>(Expression<Func<MenuItemDto, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<MenuItemDto>.Transform<TProperty, TTransformed>(Expression<Func<MenuItemDto, TProperty>>, Func<MenuItemDto, TProperty, TTransformed>) AbstractValidator<MenuItemDto>.RuleForEach<TElement>(Expression<Func<MenuItemDto, IEnumerable<TElement>>>) AbstractValidator<MenuItemDto>.TransformForEach<TElement, TTransformed>(Expression<Func<MenuItemDto, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<MenuItemDto>.TransformForEach<TElement, TTransformed>(Expression<Func<MenuItemDto, IEnumerable<TElement>>>, Func<MenuItemDto, TElement, TTransformed>) AbstractValidator<MenuItemDto>.RuleSet(string, Action) AbstractValidator<MenuItemDto>.When(Func<MenuItemDto, bool>, Action) AbstractValidator<MenuItemDto>.When(Func<MenuItemDto, ValidationContext<MenuItemDto>, bool>, Action) AbstractValidator<MenuItemDto>.Unless(Func<MenuItemDto, bool>, Action) AbstractValidator<MenuItemDto>.Unless(Func<MenuItemDto, ValidationContext<MenuItemDto>, bool>, Action) AbstractValidator<MenuItemDto>.WhenAsync(Func<MenuItemDto, CancellationToken, Task<bool>>, Action) AbstractValidator<MenuItemDto>.WhenAsync(Func<MenuItemDto, ValidationContext<MenuItemDto>, CancellationToken, Task<bool>>, Action) AbstractValidator<MenuItemDto>.UnlessAsync(Func<MenuItemDto, CancellationToken, Task<bool>>, Action) AbstractValidator<MenuItemDto>.UnlessAsync(Func<MenuItemDto, ValidationContext<MenuItemDto>, CancellationToken, Task<bool>>, Action) AbstractValidator<MenuItemDto>.Include(IValidator<MenuItemDto>) AbstractValidator<MenuItemDto>.Include<TValidator>(Func<MenuItemDto, TValidator>) AbstractValidator<MenuItemDto>.GetEnumerator() AbstractValidator<MenuItemDto>.EnsureInstanceNotNull(object) AbstractValidator<MenuItemDto>.PreValidate(ValidationContext<MenuItemDto>, ValidationResult) AbstractValidator<MenuItemDto>.RaiseValidationException(ValidationContext<MenuItemDto>, ValidationResult) AbstractValidator<MenuItemDto>.CascadeMode AbstractValidator<MenuItemDto>.ClassLevelCascadeMode AbstractValidator<MenuItemDto>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MenuItemDtoValidator() public MenuItemDtoValidator()"
  },
  "api/Caesar.API.Validators.ReservationDtoValidator.html": {
    "href": "api/Caesar.API.Validators.ReservationDtoValidator.html",
    "title": "Class ReservationDtoValidator | docfx docfx.json --serve",
    "keywords": "Class ReservationDtoValidator Namespace Caesar.API.Validators Assembly Caesar.API.dll public class ReservationDtoValidator : AbstractValidator<ReservationDto>, IValidator<ReservationDto>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<ReservationDto> ReservationDtoValidator Implements IValidator<ReservationDto> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<ReservationDto>.Validate(ReservationDto) AbstractValidator<ReservationDto>.ValidateAsync(ReservationDto, CancellationToken) AbstractValidator<ReservationDto>.Validate(ValidationContext<ReservationDto>) AbstractValidator<ReservationDto>.ValidateAsync(ValidationContext<ReservationDto>, CancellationToken) AbstractValidator<ReservationDto>.CreateDescriptor() AbstractValidator<ReservationDto>.RuleFor<TProperty>(Expression<Func<ReservationDto, TProperty>>) AbstractValidator<ReservationDto>.Transform<TProperty, TTransformed>(Expression<Func<ReservationDto, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<ReservationDto>.Transform<TProperty, TTransformed>(Expression<Func<ReservationDto, TProperty>>, Func<ReservationDto, TProperty, TTransformed>) AbstractValidator<ReservationDto>.RuleForEach<TElement>(Expression<Func<ReservationDto, IEnumerable<TElement>>>) AbstractValidator<ReservationDto>.TransformForEach<TElement, TTransformed>(Expression<Func<ReservationDto, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<ReservationDto>.TransformForEach<TElement, TTransformed>(Expression<Func<ReservationDto, IEnumerable<TElement>>>, Func<ReservationDto, TElement, TTransformed>) AbstractValidator<ReservationDto>.RuleSet(string, Action) AbstractValidator<ReservationDto>.When(Func<ReservationDto, bool>, Action) AbstractValidator<ReservationDto>.When(Func<ReservationDto, ValidationContext<ReservationDto>, bool>, Action) AbstractValidator<ReservationDto>.Unless(Func<ReservationDto, bool>, Action) AbstractValidator<ReservationDto>.Unless(Func<ReservationDto, ValidationContext<ReservationDto>, bool>, Action) AbstractValidator<ReservationDto>.WhenAsync(Func<ReservationDto, CancellationToken, Task<bool>>, Action) AbstractValidator<ReservationDto>.WhenAsync(Func<ReservationDto, ValidationContext<ReservationDto>, CancellationToken, Task<bool>>, Action) AbstractValidator<ReservationDto>.UnlessAsync(Func<ReservationDto, CancellationToken, Task<bool>>, Action) AbstractValidator<ReservationDto>.UnlessAsync(Func<ReservationDto, ValidationContext<ReservationDto>, CancellationToken, Task<bool>>, Action) AbstractValidator<ReservationDto>.Include(IValidator<ReservationDto>) AbstractValidator<ReservationDto>.Include<TValidator>(Func<ReservationDto, TValidator>) AbstractValidator<ReservationDto>.GetEnumerator() AbstractValidator<ReservationDto>.EnsureInstanceNotNull(object) AbstractValidator<ReservationDto>.PreValidate(ValidationContext<ReservationDto>, ValidationResult) AbstractValidator<ReservationDto>.RaiseValidationException(ValidationContext<ReservationDto>, ValidationResult) AbstractValidator<ReservationDto>.CascadeMode AbstractValidator<ReservationDto>.ClassLevelCascadeMode AbstractValidator<ReservationDto>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ReservationDtoValidator() public ReservationDtoValidator()"
  },
  "api/Caesar.API.Validators.html": {
    "href": "api/Caesar.API.Validators.html",
    "title": "Namespace Caesar.API.Validators | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.API.Validators Classes MenuItemDtoValidator ReservationDtoValidator"
  },
  "api/Caesar.API.html": {
    "href": "api/Caesar.API.html",
    "title": "Namespace Caesar.API | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.API Classes Program"
  },
  "api/Caesar.App.App.html": {
    "href": "api/Caesar.App.App.html",
    "title": "Class App | docfx docfx.json --serve",
    "keywords": "Class App Namespace Caesar.App Assembly Caesar.App.dll [XamlFilePath(\"App.xaml\")] public class App : Application, INotifyPropertyChanged, IElementController, IEffectControlProvider, IToolTipElement, IContextFlyoutElement, IApplicationController, IElementConfiguration<Application>, IVisualTreeElement, IApplication, IElement Inheritance object BindableObject Element Application App Implements INotifyPropertyChanged IElementController IEffectControlProvider IToolTipElement IContextFlyoutElement IApplicationController IElementConfiguration<Application> IVisualTreeElement IApplication IElement Inherited Members Application.ControlsApplicationMapper Application.Quit() Application.On<T>() Application.OnAppLinkRequestReceived(Uri) Application.OnParentSet() Application.OnResume() Application.OnSleep() Application.OnStart() Application.CleanUp() Application.OpenWindow(Window) Application.CloseWindow(Window) Application.CreateWindow(IActivationState) Application.AppLinks Application.Current Application.MainPage Application.Resources Application.UserAppTheme Application.PlatformAppTheme Application.RequestedTheme Application.AccentColor Application.Windows Application.RequestedThemeChanged Application.ModalPopped Application.ModalPopping Application.ModalPushed Application.ModalPushing Application.PageAppearing Application.PageDisappearing Element.AutomationIdProperty Element.ClassIdProperty Element.ControlsElementMapper Element.InsertLogicalChild(int, Element) Element.AddLogicalChild(Element) Element.RemoveLogicalChild(Element) Element.ClearLogicalChildren() Element.FindByName(string) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, string) Element.OnBindingContextChanged() Element.OnChildAdded(Element) Element.OnChildRemoved(Element, int) Element.OnPropertyChanged(string) Element.OnParentChanging(ParentChangingEventArgs) Element.OnParentChanged() Element.OnHandlerChanging(HandlerChangingEventArgs) Element.OnHandlerChanged() Element.MapAutomationPropertiesIsInAccessibleTree(IElementHandler, Element) Element.MapAutomationPropertiesLabeledBy(IElementHandler, Element) Element.MapAutomationPropertiesHelpText(IElementHandler, Element) Element.MapAutomationPropertiesName(IElementHandler, Element) Element.MapAutomationPropertiesExcludedWithChildren(IElementHandler, Element) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.Handler Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved Element.ParentChanging Element.ParentChanged Element.HandlerChanging Element.HandlerChanged BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors App() public App()"
  },
  "api/Caesar.App.AppShell.html": {
    "href": "api/Caesar.App.AppShell.html",
    "title": "Class AppShell | docfx docfx.json --serve",
    "keywords": "Class AppShell Namespace Caesar.App Assembly Caesar.App.dll [XamlFilePath(\"AppShell.xaml\")] public class AppShell : Shell, INotifyPropertyChanged, IVisualTreeElement, IEffectControlProvider, IToolTipElement, IContextFlyoutElement, IAnimatable, ILayout, IElementConfiguration<Page>, ISafeAreaView, ITitledElement, IToolbarElement, IShellController, IPageController, IVisualElementController, IElementController, IPageContainer<Page>, IFlyoutView, IView, IElement, ITransform Inheritance object BindableObject Element NavigableElement VisualElement Page Shell AppShell Implements INotifyPropertyChanged IVisualTreeElement IEffectControlProvider IToolTipElement IContextFlyoutElement IAnimatable ILayout IElementConfiguration<Page> ISafeAreaView ITitledElement IToolbarElement IShellController IPageController IVisualElementController IElementController IPageContainer<Page> IFlyoutView IView IElement ITransform Inherited Members Shell.BackButtonBehaviorProperty Shell.PresentationModeProperty Shell.FlyoutBehaviorProperty Shell.NavBarIsVisibleProperty Shell.NavBarHasShadowProperty Shell.SearchHandlerProperty Shell.FlyoutItemIsVisibleProperty Shell.TabBarIsVisibleProperty Shell.TitleViewProperty Shell.MenuItemTemplateProperty Shell.ItemTemplateProperty Shell.BackgroundColorProperty Shell.DisabledColorProperty Shell.ForegroundColorProperty Shell.TabBarBackgroundColorProperty Shell.TabBarDisabledColorProperty Shell.TabBarForegroundColorProperty Shell.TabBarTitleColorProperty Shell.TabBarUnselectedColorProperty Shell.TitleColorProperty Shell.UnselectedColorProperty Shell.FlyoutBackdropProperty Shell.FlyoutWidthProperty Shell.FlyoutHeightProperty Shell.CurrentItemProperty Shell.CurrentStateProperty Shell.FlyoutBackgroundImageProperty Shell.FlyoutBackgroundImageAspectProperty Shell.FlyoutBackgroundColorProperty Shell.FlyoutBackgroundProperty Shell.FlyoutHeaderBehaviorProperty Shell.FlyoutHeaderProperty Shell.FlyoutFooterProperty Shell.FlyoutHeaderTemplateProperty Shell.FlyoutFooterTemplateProperty Shell.FlyoutIsPresentedProperty Shell.ItemsProperty Shell.FlyoutIconProperty Shell.FlyoutVerticalScrollModeProperty Shell.FlyoutContentProperty Shell.FlyoutContentTemplateProperty Shell.GetFlyoutItemIsVisible(BindableObject) Shell.SetFlyoutItemIsVisible(BindableObject, bool) Shell.GetMenuItemTemplate(BindableObject) Shell.SetMenuItemTemplate(BindableObject, DataTemplate) Shell.GetItemTemplate(BindableObject) Shell.SetItemTemplate(BindableObject, DataTemplate) Shell.GetBackButtonBehavior(BindableObject) Shell.SetBackButtonBehavior(BindableObject, BackButtonBehavior) Shell.GetPresentationMode(BindableObject) Shell.SetPresentationMode(BindableObject, PresentationMode) Shell.GetFlyoutBehavior(BindableObject) Shell.SetFlyoutBehavior(BindableObject, FlyoutBehavior) Shell.GetFlyoutWidth(BindableObject) Shell.SetFlyoutWidth(BindableObject, double) Shell.GetFlyoutHeight(BindableObject) Shell.SetFlyoutHeight(BindableObject, double) Shell.GetNavBarIsVisible(BindableObject) Shell.SetNavBarIsVisible(BindableObject, bool) Shell.GetNavBarHasShadow(BindableObject) Shell.SetNavBarHasShadow(BindableObject, bool) Shell.GetSearchHandler(BindableObject) Shell.SetSearchHandler(BindableObject, SearchHandler) Shell.GetTabBarIsVisible(BindableObject) Shell.SetTabBarIsVisible(BindableObject, bool) Shell.GetTitleView(BindableObject) Shell.SetTitleView(BindableObject, View) Shell.GetBackgroundColor(BindableObject) Shell.SetBackgroundColor(BindableObject, Color) Shell.GetDisabledColor(BindableObject) Shell.SetDisabledColor(BindableObject, Color) Shell.GetForegroundColor(BindableObject) Shell.SetForegroundColor(BindableObject, Color) Shell.GetTabBarBackgroundColor(BindableObject) Shell.SetTabBarBackgroundColor(BindableObject, Color) Shell.GetTabBarDisabledColor(BindableObject) Shell.SetTabBarDisabledColor(BindableObject, Color) Shell.GetTabBarForegroundColor(BindableObject) Shell.SetTabBarForegroundColor(BindableObject, Color) Shell.GetTabBarTitleColor(BindableObject) Shell.SetTabBarTitleColor(BindableObject, Color) Shell.GetTabBarUnselectedColor(BindableObject) Shell.SetTabBarUnselectedColor(BindableObject, Color) Shell.GetTitleColor(BindableObject) Shell.SetTitleColor(BindableObject, Color) Shell.GetUnselectedColor(BindableObject) Shell.SetUnselectedColor(BindableObject, Color) Shell.GetFlyoutBackdrop(BindableObject) Shell.SetFlyoutBackdrop(BindableObject, Brush) Shell.GoToAsync(ShellNavigationState) Shell.GoToAsync(ShellNavigationState, bool) Shell.GoToAsync(ShellNavigationState, IDictionary<string, object>) Shell.GoToAsync(ShellNavigationState, bool, IDictionary<string, object>) Shell.GoToAsync(ShellNavigationState, ShellNavigationQueryParameters) Shell.GoToAsync(ShellNavigationState, bool, ShellNavigationQueryParameters) Shell.OnBindingContextChanged() Shell.OnBackButtonPressed() Shell.OnNavigated(ShellNavigatedEventArgs) Shell.OnNavigating(ShellNavigatingEventArgs) Shell.LayoutChildren(double, double, double, double) Shell.OnPropertyChanged(string) Shell.CurrentPage Shell.Current Shell.FlyoutVerticalScrollMode Shell.FlyoutIcon Shell.CurrentItem Shell.CurrentState Shell.FlyoutBackgroundImage Shell.FlyoutBackgroundImageAspect Shell.FlyoutBackgroundColor Shell.FlyoutBackground Shell.FlyoutBackdrop Shell.FlyoutWidth Shell.FlyoutHeight Shell.FlyoutBehavior Shell.FlyoutHeader Shell.FlyoutFooter Shell.FlyoutHeaderBehavior Shell.FlyoutHeaderTemplate Shell.FlyoutFooterTemplate Shell.FlyoutIsPresented Shell.Items Shell.ItemTemplate Shell.MenuItemTemplate Shell.FlyoutItems Shell.FlyoutContent Shell.FlyoutContentTemplate Shell.Navigated Shell.Navigating Page.BusySetSignalName Page.AlertSignalName Page.PromptSignalName Page.ActionSheetSignalName Page.BackgroundImageSourceProperty Page.IsBusyProperty Page.PaddingProperty Page.TitleProperty Page.IconImageSourceProperty Page.DisplayActionSheet(string, string, string, params string[]) Page.DisplayActionSheet(string, string, string, FlowDirection, params string[]) Page.DisplayAlert(string, string, string) Page.DisplayAlert(string, string, string, string) Page.DisplayAlert(string, string, string, FlowDirection) Page.DisplayAlert(string, string, string, string, FlowDirection) Page.DisplayPromptAsync(string, string, string, string, string, int, Keyboard, string) Page.ForceLayout() Page.SendBackButtonPressed() Page.OnAppearing() Page.OnChildMeasureInvalidated(object, EventArgs) Page.OnDisappearing() Page.OnParentSet() Page.OnSizeAllocated(double, double) Page.UpdateChildrenLayout() Page.On<T>() Page.OnNavigatedTo(NavigatedToEventArgs) Page.OnNavigatingFrom(NavigatingFromEventArgs) Page.OnNavigatedFrom(NavigatedFromEventArgs) Page.GetParentWindow() Page.BackgroundImageSource Page.IconImageSource Page.IsBusy Page.Padding Page.Title Page.ToolbarItems Page.MenuBarItems Page.LayoutChanged Page.Appearing Page.Disappearing Page.NavigatedTo Page.NavigatingFrom Page.NavigatedFrom VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.MaximumWidthRequestProperty VisualElement.MaximumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.WindowProperty VisualElement.ShadowProperty VisualElement.ZIndexProperty VisualElement.ControlsVisualElementMapper VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Measure(double, double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildRemoved(Element, int) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(double, double) VisualElement.SizeAllocated(double, double) VisualElement.ChangeVisualState() VisualElement.RefreshIsEnabledProperty() VisualElement.Arrange(Rect) VisualElement.ArrangeOverride(Rect) VisualElement.Layout(Rect) VisualElement.InvalidateMeasureOverride() VisualElement.MeasureOverride(double, double) VisualElement.MapBackgroundColor(IViewHandler, IView) VisualElement.MapBackgroundImageSource(IViewHandler, IView) VisualElement.MapAccessKeyHorizontalOffset(IViewHandler, IView) VisualElement.MapAccessKeyPlacement(IViewHandler, IView) VisualElement.MapAccessKey(IViewHandler, IView) VisualElement.MapAccessKeyVerticalOffset(IViewHandler, IView) VisualElement.Visual VisualElement.FlowDirection VisualElement.Window VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsEnabledCore VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.MaximumHeightRequest VisualElement.MaximumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.Frame VisualElement.Handler VisualElement.Shadow VisualElement.ZIndex VisualElement.DesiredSize VisualElement.IsLoaded VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused VisualElement.Loaded VisualElement.Unloaded NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.AutomationIdProperty Element.ClassIdProperty Element.ControlsElementMapper Element.InsertLogicalChild(int, Element) Element.AddLogicalChild(Element) Element.RemoveLogicalChild(Element) Element.ClearLogicalChildren() Element.FindByName(string) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, string) Element.OnParentChanging(ParentChangingEventArgs) Element.OnParentChanged() Element.OnHandlerChanging(HandlerChangingEventArgs) Element.OnHandlerChanged() Element.MapAutomationPropertiesIsInAccessibleTree(IElementHandler, Element) Element.MapAutomationPropertiesLabeledBy(IElementHandler, Element) Element.MapAutomationPropertiesHelpText(IElementHandler, Element) Element.MapAutomationPropertiesName(IElementHandler, Element) Element.MapAutomationPropertiesExcludedWithChildren(IElementHandler, Element) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved Element.ParentChanging Element.ParentChanged Element.HandlerChanging Element.HandlerChanged BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppShell() public AppShell()"
  },
  "api/Caesar.App.Converters.DecimalConverter.html": {
    "href": "api/Caesar.App.Converters.DecimalConverter.html",
    "title": "Class DecimalConverter | docfx docfx.json --serve",
    "keywords": "Class DecimalConverter Namespace Caesar.App.Converters Assembly Caesar.App.dll public class DecimalConverter : IValueConverter Inheritance object DecimalConverter Implements IValueConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Convert(object, Type, object, CultureInfo) public object Convert(object value, Type targetType, object parameter, CultureInfo culture) Parameters value object targetType Type parameter object culture CultureInfo Returns object ConvertBack(object, Type, object, CultureInfo) public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture) Parameters value object targetType Type parameter object culture CultureInfo Returns object"
  },
  "api/Caesar.App.Converters.html": {
    "href": "api/Caesar.App.Converters.html",
    "title": "Namespace Caesar.App.Converters | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.App.Converters Classes DecimalConverter"
  },
  "api/Caesar.App.MauiProgram.html": {
    "href": "api/Caesar.App.MauiProgram.html",
    "title": "Class MauiProgram | docfx docfx.json --serve",
    "keywords": "Class MauiProgram Namespace Caesar.App Assembly Caesar.App.dll public static class MauiProgram Inheritance object MauiProgram Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateMauiApp() public static MauiApp CreateMauiApp() Returns MauiApp"
  },
  "api/Caesar.App.Models.LoginResult.html": {
    "href": "api/Caesar.App.Models.LoginResult.html",
    "title": "Class LoginResult | docfx docfx.json --serve",
    "keywords": "Class LoginResult Namespace Caesar.App.Models Assembly Caesar.App.dll public class LoginResult Inheritance object LoginResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ErrorMessage public string ErrorMessage { get; set; } Property Value string IsSuccess public bool IsSuccess { get; set; } Property Value bool Token public string Token { get; set; } Property Value string"
  },
  "api/Caesar.App.Models.html": {
    "href": "api/Caesar.App.Models.html",
    "title": "Namespace Caesar.App.Models | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.App.Models Classes LoginResult"
  },
  "api/Caesar.App.Services.ApiService.html": {
    "href": "api/Caesar.App.Services.ApiService.html",
    "title": "Class ApiService | docfx docfx.json --serve",
    "keywords": "Class ApiService Namespace Caesar.App.Services Assembly Caesar.App.dll public class ApiService : IApiService Inheritance object ApiService Implements IApiService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ApiService(ITokenService) public ApiService(ITokenService tokenService) Parameters tokenService ITokenService Methods CancelReservationAsync(int) public Task<bool> CancelReservationAsync(int id) Parameters id int Returns Task<bool> CreateReservationAsync(ReservationDto) public Task<bool> CreateReservationAsync(ReservationDto reservation) Parameters reservation ReservationDto Returns Task<bool> DeleteMenuItemAsync(int) public Task<bool> DeleteMenuItemAsync(int id) Parameters id int Returns Task<bool> GetMenuItemAsync(int) public Task<MenuItemDto> GetMenuItemAsync(int id) Parameters id int Returns Task<MenuItemDto> GetMenuItemsAsync() public Task<IEnumerable<MenuItemDto>> GetMenuItemsAsync() Returns Task<IEnumerable<MenuItemDto>> GetReservationAsync(int) public Task<ReservationDto> GetReservationAsync(int id) Parameters id int Returns Task<ReservationDto> GetReservationsAsync() public Task<IEnumerable<ReservationDto>> GetReservationsAsync() Returns Task<IEnumerable<ReservationDto>> LoginAsync(string, string) public Task<LoginResult> LoginAsync(string username, string password) Parameters username string password string Returns Task<LoginResult> SaveMenuItemAsync(MenuItemDto) public Task<bool> SaveMenuItemAsync(MenuItemDto menuItem) Parameters menuItem MenuItemDto Returns Task<bool> UpdateReservationAsync(ReservationDto) public Task<bool> UpdateReservationAsync(ReservationDto reservation) Parameters reservation ReservationDto Returns Task<bool>"
  },
  "api/Caesar.App.Services.IApiService.html": {
    "href": "api/Caesar.App.Services.IApiService.html",
    "title": "Interface IApiService | docfx docfx.json --serve",
    "keywords": "Interface IApiService Namespace Caesar.App.Services Assembly Caesar.App.dll public interface IApiService Methods CancelReservationAsync(int) Task<bool> CancelReservationAsync(int id) Parameters id int Returns Task<bool> CreateReservationAsync(ReservationDto) Task<bool> CreateReservationAsync(ReservationDto reservation) Parameters reservation ReservationDto Returns Task<bool> DeleteMenuItemAsync(int) Task<bool> DeleteMenuItemAsync(int id) Parameters id int Returns Task<bool> GetMenuItemAsync(int) Task<MenuItemDto> GetMenuItemAsync(int id) Parameters id int Returns Task<MenuItemDto> GetMenuItemsAsync() Task<IEnumerable<MenuItemDto>> GetMenuItemsAsync() Returns Task<IEnumerable<MenuItemDto>> GetReservationAsync(int) Task<ReservationDto> GetReservationAsync(int id) Parameters id int Returns Task<ReservationDto> GetReservationsAsync() Task<IEnumerable<ReservationDto>> GetReservationsAsync() Returns Task<IEnumerable<ReservationDto>> LoginAsync(string, string) Task<LoginResult> LoginAsync(string username, string password) Parameters username string password string Returns Task<LoginResult> SaveMenuItemAsync(MenuItemDto) Task<bool> SaveMenuItemAsync(MenuItemDto menuItem) Parameters menuItem MenuItemDto Returns Task<bool> UpdateReservationAsync(ReservationDto) Task<bool> UpdateReservationAsync(ReservationDto reservation) Parameters reservation ReservationDto Returns Task<bool>"
  },
  "api/Caesar.App.Services.ITokenService.html": {
    "href": "api/Caesar.App.Services.ITokenService.html",
    "title": "Interface ITokenService | docfx docfx.json --serve",
    "keywords": "Interface ITokenService Namespace Caesar.App.Services Assembly Caesar.App.dll public interface ITokenService Methods ClearTokenAsync() Task ClearTokenAsync() Returns Task GetTokenAsync() Task<string> GetTokenAsync() Returns Task<string> IsAuthenticatedAsync() Task<bool> IsAuthenticatedAsync() Returns Task<bool> SetTokenAsync(string) Task SetTokenAsync(string token) Parameters token string Returns Task"
  },
  "api/Caesar.App.Services.TokenService.html": {
    "href": "api/Caesar.App.Services.TokenService.html",
    "title": "Class TokenService | docfx docfx.json --serve",
    "keywords": "Class TokenService Namespace Caesar.App.Services Assembly Caesar.App.dll public class TokenService : ITokenService Inheritance object TokenService Implements ITokenService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ClearTokenAsync() public Task ClearTokenAsync() Returns Task GetTokenAsync() public Task<string> GetTokenAsync() Returns Task<string> IsAuthenticatedAsync() public Task<bool> IsAuthenticatedAsync() Returns Task<bool> SetTokenAsync(string) public Task SetTokenAsync(string token) Parameters token string Returns Task"
  },
  "api/Caesar.App.Services.html": {
    "href": "api/Caesar.App.Services.html",
    "title": "Namespace Caesar.App.Services | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.App.Services Classes ApiService TokenService Interfaces IApiService ITokenService"
  },
  "api/Caesar.App.ViewModels.BaseViewModel.html": {
    "href": "api/Caesar.App.ViewModels.BaseViewModel.html",
    "title": "Class BaseViewModel | docfx docfx.json --serve",
    "keywords": "Class BaseViewModel Namespace Caesar.App.ViewModels Assembly Caesar.App.dll public class BaseViewModel : INotifyPropertyChanged Inheritance object BaseViewModel Implements INotifyPropertyChanged Derived LoginViewModel MainViewModel MenuItemDetailViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsBusy public bool IsBusy { get; set; } Property Value bool Methods OnPropertyChanged(string) protected virtual void OnPropertyChanged(string propertyName = null) Parameters propertyName string SetProperty<T>(ref T, T, string) protected bool SetProperty<T>(ref T storage, T value, string propertyName = null) Parameters storage T value T propertyName string Returns bool Type Parameters T Events PropertyChanged Occurs when a property value changes. public event PropertyChangedEventHandler PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/Caesar.App.ViewModels.LoginViewModel.html": {
    "href": "api/Caesar.App.ViewModels.LoginViewModel.html",
    "title": "Class LoginViewModel | docfx docfx.json --serve",
    "keywords": "Class LoginViewModel Namespace Caesar.App.ViewModels Assembly Caesar.App.dll public class LoginViewModel : BaseViewModel, INotifyPropertyChanged Inheritance object BaseViewModel LoginViewModel Implements INotifyPropertyChanged Inherited Members BaseViewModel.IsBusy BaseViewModel.PropertyChanged BaseViewModel.OnPropertyChanged(string) BaseViewModel.SetProperty<T>(ref T, T, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LoginViewModel(IApiService, ITokenService) public LoginViewModel(IApiService apiService, ITokenService tokenService) Parameters apiService IApiService tokenService ITokenService Properties ErrorMessage public string ErrorMessage { get; set; } Property Value string LoginCommand public ICommand LoginCommand { get; } Property Value ICommand Password public string Password { get; set; } Property Value string Username public string Username { get; set; } Property Value string"
  },
  "api/Caesar.App.ViewModels.MainViewModel.html": {
    "href": "api/Caesar.App.ViewModels.MainViewModel.html",
    "title": "Class MainViewModel | docfx docfx.json --serve",
    "keywords": "Class MainViewModel Namespace Caesar.App.ViewModels Assembly Caesar.App.dll public class MainViewModel : BaseViewModel, INotifyPropertyChanged Inheritance object BaseViewModel MainViewModel Implements INotifyPropertyChanged Inherited Members BaseViewModel.IsBusy BaseViewModel.PropertyChanged BaseViewModel.OnPropertyChanged(string) BaseViewModel.SetProperty<T>(ref T, T, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MainViewModel(IApiService, ITokenService) public MainViewModel(IApiService apiService, ITokenService tokenService) Parameters apiService IApiService tokenService ITokenService Properties AddMenuItemCommand public ICommand AddMenuItemCommand { get; } Property Value ICommand DeleteMenuItemCommand public ICommand DeleteMenuItemCommand { get; } Property Value ICommand EditMenuItemCommand public ICommand EditMenuItemCommand { get; } Property Value ICommand LoadMenuItemsCommand public ICommand LoadMenuItemsCommand { get; } Property Value ICommand LoadReservationsCommand public ICommand LoadReservationsCommand { get; } Property Value ICommand LogoutCommand public ICommand LogoutCommand { get; } Property Value ICommand MenuItems public ObservableCollection<MenuItemDto> MenuItems { get; set; } Property Value ObservableCollection<MenuItemDto> Reservations public ObservableCollection<ReservationDto> Reservations { get; set; } Property Value ObservableCollection<ReservationDto> SelectedMenuItem public MenuItemDto SelectedMenuItem { get; set; } Property Value MenuItemDto Methods LoadData() public Task LoadData() Returns Task"
  },
  "api/Caesar.App.ViewModels.MenuItemDetailViewModel.html": {
    "href": "api/Caesar.App.ViewModels.MenuItemDetailViewModel.html",
    "title": "Class MenuItemDetailViewModel | docfx docfx.json --serve",
    "keywords": "Class MenuItemDetailViewModel Namespace Caesar.App.ViewModels Assembly Caesar.App.dll [QueryProperty(\"ItemId\", \"id\")] public class MenuItemDetailViewModel : BaseViewModel, INotifyPropertyChanged Inheritance object BaseViewModel MenuItemDetailViewModel Implements INotifyPropertyChanged Inherited Members BaseViewModel.IsBusy BaseViewModel.PropertyChanged BaseViewModel.OnPropertyChanged(string) BaseViewModel.SetProperty<T>(ref T, T, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MenuItemDetailViewModel(IApiService) public MenuItemDetailViewModel(IApiService apiService) Parameters apiService IApiService Properties CancelCommand public ICommand CancelCommand { get; } Property Value ICommand Category public string Category { get; set; } Property Value string Description public string Description { get; set; } Property Value string ImageUrl public string ImageUrl { get; set; } Property Value string ItemId public int ItemId { get; set; } Property Value int Name public string Name { get; set; } Property Value string Price public decimal Price { get; set; } Property Value decimal SaveCommand public ICommand SaveCommand { get; } Property Value ICommand"
  },
  "api/Caesar.App.ViewModels.MenuItemViewModel.html": {
    "href": "api/Caesar.App.ViewModels.MenuItemViewModel.html",
    "title": "Class MenuItemViewModel | docfx docfx.json --serve",
    "keywords": "Class MenuItemViewModel Namespace Caesar.App.ViewModels Assembly Caesar.App.dll public class MenuItemViewModel : INotifyPropertyChanged Inheritance object MenuItemViewModel Implements INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MenuItemViewModel(IApiService) public MenuItemViewModel(IApiService apiService) Parameters apiService IApiService Properties Category public string Category { get; set; } Property Value string Description public string Description { get; set; } Property Value string Id public int Id { get; set; } Property Value int Name public string Name { get; set; } Property Value string Price public decimal Price { get; set; } Property Value decimal SaveCommand public ICommand SaveCommand { get; } Property Value ICommand Methods OnPropertyChanged(string) protected virtual void OnPropertyChanged(string propertyName) Parameters propertyName string Events PropertyChanged Occurs when a property value changes. public event PropertyChangedEventHandler PropertyChanged Event Type PropertyChangedEventHandler"
  },
  "api/Caesar.App.ViewModels.html": {
    "href": "api/Caesar.App.ViewModels.html",
    "title": "Namespace Caesar.App.ViewModels | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.App.ViewModels Classes BaseViewModel LoginViewModel MainViewModel MenuItemDetailViewModel MenuItemViewModel"
  },
  "api/Caesar.App.Views.LoginPage.html": {
    "href": "api/Caesar.App.Views.LoginPage.html",
    "title": "Class LoginPage | docfx docfx.json --serve",
    "keywords": "Class LoginPage Namespace Caesar.App.Views Assembly Caesar.App.dll [XamlFilePath(\"Views\\\\LoginPage.xaml\")] public class LoginPage : ContentPage, INotifyPropertyChanged, IVisualTreeElement, IEffectControlProvider, IToolTipElement, IContextFlyoutElement, IAnimatable, ILayout, IPageController, IVisualElementController, IElementController, IElementConfiguration<Page>, ISafeAreaView, ITitledElement, IToolbarElement, IContentView, IPadding, ICrossPlatformLayout, IHotReloadableView, IView, IElement, ITransform, IReplaceableView Inheritance object BindableObject Element NavigableElement VisualElement Page TemplatedPage ContentPage LoginPage Implements INotifyPropertyChanged IVisualTreeElement IEffectControlProvider IToolTipElement IContextFlyoutElement IAnimatable ILayout IPageController IVisualElementController IElementController IElementConfiguration<Page> ISafeAreaView ITitledElement IToolbarElement IContentView IPadding ICrossPlatformLayout IHotReloadableView IView IElement ITransform IReplaceableView Inherited Members ContentPage.ContentProperty ContentPage.HideSoftInputOnTappedProperty ContentPage.OnBindingContextChanged() ContentPage.MeasureOverride(double, double) ContentPage.ArrangeOverride(Rect) ContentPage.InvalidateMeasureOverride() ContentPage.Content ContentPage.HideSoftInputOnTapped TemplatedPage.ControlTemplateProperty TemplatedPage.OnApplyTemplate() TemplatedPage.OnChildRemoved(Element, int) TemplatedPage.GetTemplateChild(string) TemplatedPage.ControlTemplate Page.BusySetSignalName Page.AlertSignalName Page.PromptSignalName Page.ActionSheetSignalName Page.BackgroundImageSourceProperty Page.IsBusyProperty Page.PaddingProperty Page.TitleProperty Page.IconImageSourceProperty Page.DisplayActionSheet(string, string, string, params string[]) Page.DisplayActionSheet(string, string, string, FlowDirection, params string[]) Page.DisplayAlert(string, string, string) Page.DisplayAlert(string, string, string, string) Page.DisplayAlert(string, string, string, FlowDirection) Page.DisplayAlert(string, string, string, string, FlowDirection) Page.DisplayPromptAsync(string, string, string, string, string, int, Keyboard, string) Page.ForceLayout() Page.SendBackButtonPressed() Page.LayoutChildren(double, double, double, double) Page.OnAppearing() Page.OnBackButtonPressed() Page.OnChildMeasureInvalidated(object, EventArgs) Page.OnDisappearing() Page.OnParentSet() Page.OnSizeAllocated(double, double) Page.UpdateChildrenLayout() Page.On<T>() Page.OnNavigatedTo(NavigatedToEventArgs) Page.OnNavigatingFrom(NavigatingFromEventArgs) Page.OnNavigatedFrom(NavigatedFromEventArgs) Page.GetParentWindow() Page.BackgroundImageSource Page.IconImageSource Page.IsBusy Page.Padding Page.Title Page.ToolbarItems Page.MenuBarItems Page.LayoutChanged Page.Appearing Page.Disappearing Page.NavigatedTo Page.NavigatingFrom Page.NavigatedFrom VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.MaximumWidthRequestProperty VisualElement.MaximumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.WindowProperty VisualElement.ShadowProperty VisualElement.ZIndexProperty VisualElement.ControlsVisualElementMapper VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Measure(double, double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(double, double) VisualElement.SizeAllocated(double, double) VisualElement.ChangeVisualState() VisualElement.RefreshIsEnabledProperty() VisualElement.Arrange(Rect) VisualElement.Layout(Rect) VisualElement.MapBackgroundColor(IViewHandler, IView) VisualElement.MapBackgroundImageSource(IViewHandler, IView) VisualElement.MapAccessKeyHorizontalOffset(IViewHandler, IView) VisualElement.MapAccessKeyPlacement(IViewHandler, IView) VisualElement.MapAccessKey(IViewHandler, IView) VisualElement.MapAccessKeyVerticalOffset(IViewHandler, IView) VisualElement.Visual VisualElement.FlowDirection VisualElement.Window VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsEnabledCore VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.MaximumHeightRequest VisualElement.MaximumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.Frame VisualElement.Handler VisualElement.Shadow VisualElement.ZIndex VisualElement.DesiredSize VisualElement.IsLoaded VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused VisualElement.Loaded VisualElement.Unloaded NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.AutomationIdProperty Element.ClassIdProperty Element.ControlsElementMapper Element.InsertLogicalChild(int, Element) Element.AddLogicalChild(Element) Element.RemoveLogicalChild(Element) Element.ClearLogicalChildren() Element.FindByName(string) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, string) Element.OnPropertyChanged(string) Element.OnParentChanging(ParentChangingEventArgs) Element.OnParentChanged() Element.OnHandlerChanging(HandlerChangingEventArgs) Element.OnHandlerChanged() Element.MapAutomationPropertiesIsInAccessibleTree(IElementHandler, Element) Element.MapAutomationPropertiesLabeledBy(IElementHandler, Element) Element.MapAutomationPropertiesHelpText(IElementHandler, Element) Element.MapAutomationPropertiesName(IElementHandler, Element) Element.MapAutomationPropertiesExcludedWithChildren(IElementHandler, Element) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved Element.ParentChanging Element.ParentChanged Element.HandlerChanging Element.HandlerChanged BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LoginPage(LoginViewModel) public LoginPage(LoginViewModel viewModel) Parameters viewModel LoginViewModel"
  },
  "api/Caesar.App.Views.MainPage.html": {
    "href": "api/Caesar.App.Views.MainPage.html",
    "title": "Class MainPage | docfx docfx.json --serve",
    "keywords": "Class MainPage Namespace Caesar.App.Views Assembly Caesar.App.dll [XamlFilePath(\"Views\\\\MainPage.xaml\")] public class MainPage : ContentPage, INotifyPropertyChanged, IVisualTreeElement, IEffectControlProvider, IToolTipElement, IContextFlyoutElement, IAnimatable, ILayout, IPageController, IVisualElementController, IElementController, IElementConfiguration<Page>, ISafeAreaView, ITitledElement, IToolbarElement, IContentView, IPadding, ICrossPlatformLayout, IHotReloadableView, IView, IElement, ITransform, IReplaceableView Inheritance object BindableObject Element NavigableElement VisualElement Page TemplatedPage ContentPage MainPage Implements INotifyPropertyChanged IVisualTreeElement IEffectControlProvider IToolTipElement IContextFlyoutElement IAnimatable ILayout IPageController IVisualElementController IElementController IElementConfiguration<Page> ISafeAreaView ITitledElement IToolbarElement IContentView IPadding ICrossPlatformLayout IHotReloadableView IView IElement ITransform IReplaceableView Inherited Members ContentPage.ContentProperty ContentPage.HideSoftInputOnTappedProperty ContentPage.OnBindingContextChanged() ContentPage.MeasureOverride(double, double) ContentPage.ArrangeOverride(Rect) ContentPage.InvalidateMeasureOverride() ContentPage.Content ContentPage.HideSoftInputOnTapped TemplatedPage.ControlTemplateProperty TemplatedPage.OnApplyTemplate() TemplatedPage.OnChildRemoved(Element, int) TemplatedPage.GetTemplateChild(string) TemplatedPage.ControlTemplate Page.BusySetSignalName Page.AlertSignalName Page.PromptSignalName Page.ActionSheetSignalName Page.BackgroundImageSourceProperty Page.IsBusyProperty Page.PaddingProperty Page.TitleProperty Page.IconImageSourceProperty Page.DisplayActionSheet(string, string, string, params string[]) Page.DisplayActionSheet(string, string, string, FlowDirection, params string[]) Page.DisplayAlert(string, string, string) Page.DisplayAlert(string, string, string, string) Page.DisplayAlert(string, string, string, FlowDirection) Page.DisplayAlert(string, string, string, string, FlowDirection) Page.DisplayPromptAsync(string, string, string, string, string, int, Keyboard, string) Page.ForceLayout() Page.SendBackButtonPressed() Page.LayoutChildren(double, double, double, double) Page.OnBackButtonPressed() Page.OnChildMeasureInvalidated(object, EventArgs) Page.OnDisappearing() Page.OnParentSet() Page.OnSizeAllocated(double, double) Page.UpdateChildrenLayout() Page.On<T>() Page.OnNavigatedTo(NavigatedToEventArgs) Page.OnNavigatingFrom(NavigatingFromEventArgs) Page.OnNavigatedFrom(NavigatedFromEventArgs) Page.GetParentWindow() Page.BackgroundImageSource Page.IconImageSource Page.IsBusy Page.Padding Page.Title Page.ToolbarItems Page.MenuBarItems Page.LayoutChanged Page.Appearing Page.Disappearing Page.NavigatedTo Page.NavigatingFrom Page.NavigatedFrom VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.MaximumWidthRequestProperty VisualElement.MaximumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.WindowProperty VisualElement.ShadowProperty VisualElement.ZIndexProperty VisualElement.ControlsVisualElementMapper VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Measure(double, double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(double, double) VisualElement.SizeAllocated(double, double) VisualElement.ChangeVisualState() VisualElement.RefreshIsEnabledProperty() VisualElement.Arrange(Rect) VisualElement.Layout(Rect) VisualElement.MapBackgroundColor(IViewHandler, IView) VisualElement.MapBackgroundImageSource(IViewHandler, IView) VisualElement.MapAccessKeyHorizontalOffset(IViewHandler, IView) VisualElement.MapAccessKeyPlacement(IViewHandler, IView) VisualElement.MapAccessKey(IViewHandler, IView) VisualElement.MapAccessKeyVerticalOffset(IViewHandler, IView) VisualElement.Visual VisualElement.FlowDirection VisualElement.Window VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsEnabledCore VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.MaximumHeightRequest VisualElement.MaximumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.Frame VisualElement.Handler VisualElement.Shadow VisualElement.ZIndex VisualElement.DesiredSize VisualElement.IsLoaded VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused VisualElement.Loaded VisualElement.Unloaded NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.AutomationIdProperty Element.ClassIdProperty Element.ControlsElementMapper Element.InsertLogicalChild(int, Element) Element.AddLogicalChild(Element) Element.RemoveLogicalChild(Element) Element.ClearLogicalChildren() Element.FindByName(string) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, string) Element.OnPropertyChanged(string) Element.OnParentChanging(ParentChangingEventArgs) Element.OnParentChanged() Element.OnHandlerChanging(HandlerChangingEventArgs) Element.OnHandlerChanged() Element.MapAutomationPropertiesIsInAccessibleTree(IElementHandler, Element) Element.MapAutomationPropertiesLabeledBy(IElementHandler, Element) Element.MapAutomationPropertiesHelpText(IElementHandler, Element) Element.MapAutomationPropertiesName(IElementHandler, Element) Element.MapAutomationPropertiesExcludedWithChildren(IElementHandler, Element) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved Element.ParentChanging Element.ParentChanged Element.HandlerChanging Element.HandlerChanged BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MainPage(IApiService, ITokenService) public MainPage(IApiService apiService, ITokenService tokenService) Parameters apiService IApiService tokenService ITokenService Methods OnAppearing() When overridden in a derived class, allows application developers to customize behavior immediately prior to the page becoming visible. protected override void OnAppearing()"
  },
  "api/Caesar.App.Views.MenuItemDetailPage.html": {
    "href": "api/Caesar.App.Views.MenuItemDetailPage.html",
    "title": "Class MenuItemDetailPage | docfx docfx.json --serve",
    "keywords": "Class MenuItemDetailPage Namespace Caesar.App.Views Assembly Caesar.App.dll [XamlFilePath(\"Views\\\\MenuItemDetailPage.xaml\")] public class MenuItemDetailPage : ContentPage, INotifyPropertyChanged, IVisualTreeElement, IEffectControlProvider, IToolTipElement, IContextFlyoutElement, IAnimatable, ILayout, IPageController, IVisualElementController, IElementController, IElementConfiguration<Page>, ISafeAreaView, ITitledElement, IToolbarElement, IContentView, IPadding, ICrossPlatformLayout, IHotReloadableView, IView, IElement, ITransform, IReplaceableView Inheritance object BindableObject Element NavigableElement VisualElement Page TemplatedPage ContentPage MenuItemDetailPage Implements INotifyPropertyChanged IVisualTreeElement IEffectControlProvider IToolTipElement IContextFlyoutElement IAnimatable ILayout IPageController IVisualElementController IElementController IElementConfiguration<Page> ISafeAreaView ITitledElement IToolbarElement IContentView IPadding ICrossPlatformLayout IHotReloadableView IView IElement ITransform IReplaceableView Inherited Members ContentPage.ContentProperty ContentPage.HideSoftInputOnTappedProperty ContentPage.OnBindingContextChanged() ContentPage.MeasureOverride(double, double) ContentPage.ArrangeOverride(Rect) ContentPage.InvalidateMeasureOverride() ContentPage.Content ContentPage.HideSoftInputOnTapped TemplatedPage.ControlTemplateProperty TemplatedPage.OnApplyTemplate() TemplatedPage.OnChildRemoved(Element, int) TemplatedPage.GetTemplateChild(string) TemplatedPage.ControlTemplate Page.BusySetSignalName Page.AlertSignalName Page.PromptSignalName Page.ActionSheetSignalName Page.BackgroundImageSourceProperty Page.IsBusyProperty Page.PaddingProperty Page.TitleProperty Page.IconImageSourceProperty Page.DisplayActionSheet(string, string, string, params string[]) Page.DisplayActionSheet(string, string, string, FlowDirection, params string[]) Page.DisplayAlert(string, string, string) Page.DisplayAlert(string, string, string, string) Page.DisplayAlert(string, string, string, FlowDirection) Page.DisplayAlert(string, string, string, string, FlowDirection) Page.DisplayPromptAsync(string, string, string, string, string, int, Keyboard, string) Page.ForceLayout() Page.SendBackButtonPressed() Page.LayoutChildren(double, double, double, double) Page.OnAppearing() Page.OnBackButtonPressed() Page.OnChildMeasureInvalidated(object, EventArgs) Page.OnDisappearing() Page.OnParentSet() Page.OnSizeAllocated(double, double) Page.UpdateChildrenLayout() Page.On<T>() Page.OnNavigatedTo(NavigatedToEventArgs) Page.OnNavigatingFrom(NavigatingFromEventArgs) Page.OnNavigatedFrom(NavigatedFromEventArgs) Page.GetParentWindow() Page.BackgroundImageSource Page.IconImageSource Page.IsBusy Page.Padding Page.Title Page.ToolbarItems Page.MenuBarItems Page.LayoutChanged Page.Appearing Page.Disappearing Page.NavigatedTo Page.NavigatingFrom Page.NavigatedFrom VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.MaximumWidthRequestProperty VisualElement.MaximumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.WindowProperty VisualElement.ShadowProperty VisualElement.ZIndexProperty VisualElement.ControlsVisualElementMapper VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Measure(double, double, MeasureFlags) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.OnMeasure(double, double) VisualElement.SizeAllocated(double, double) VisualElement.ChangeVisualState() VisualElement.RefreshIsEnabledProperty() VisualElement.Arrange(Rect) VisualElement.Layout(Rect) VisualElement.MapBackgroundColor(IViewHandler, IView) VisualElement.MapBackgroundImageSource(IViewHandler, IView) VisualElement.MapAccessKeyHorizontalOffset(IViewHandler, IView) VisualElement.MapAccessKeyPlacement(IViewHandler, IView) VisualElement.MapAccessKey(IViewHandler, IView) VisualElement.MapAccessKeyVerticalOffset(IViewHandler, IView) VisualElement.Visual VisualElement.FlowDirection VisualElement.Window VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsEnabledCore VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.MaximumHeightRequest VisualElement.MaximumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.Frame VisualElement.Handler VisualElement.Shadow VisualElement.ZIndex VisualElement.DesiredSize VisualElement.IsLoaded VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused VisualElement.Loaded VisualElement.Unloaded NavigableElement.Navigation NavigableElement.Style NavigableElement.StyleClass NavigableElement.class Element.AutomationIdProperty Element.ClassIdProperty Element.ControlsElementMapper Element.InsertLogicalChild(int, Element) Element.AddLogicalChild(Element) Element.RemoveLogicalChild(Element) Element.ClearLogicalChildren() Element.FindByName(string) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, string) Element.OnPropertyChanged(string) Element.OnParentChanging(ParentChangingEventArgs) Element.OnParentChanged() Element.OnHandlerChanging(HandlerChangingEventArgs) Element.OnHandlerChanged() Element.MapAutomationPropertiesIsInAccessibleTree(IElementHandler, Element) Element.MapAutomationPropertiesLabeledBy(IElementHandler, Element) Element.MapAutomationPropertiesHelpText(IElementHandler, Element) Element.MapAutomationPropertiesName(IElementHandler, Element) Element.MapAutomationPropertiesExcludedWithChildren(IElementHandler, Element) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved Element.ParentChanging Element.ParentChanged Element.HandlerChanging Element.HandlerChanged BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanged BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MenuItemDetailPage(IApiService) public MenuItemDetailPage(IApiService apiService) Parameters apiService IApiService"
  },
  "api/Caesar.App.Views.html": {
    "href": "api/Caesar.App.Views.html",
    "title": "Namespace Caesar.App.Views | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.App.Views Classes LoginPage MainPage MenuItemDetailPage"
  },
  "api/Caesar.App.WinUI.App.html": {
    "href": "api/Caesar.App.WinUI.App.html",
    "title": "Class App | docfx docfx.json --serve",
    "keywords": "Class App Namespace Caesar.App.WinUI Assembly Caesar.App.dll Provides application-specific behavior to supplement the default Application class. public class App : MauiWinUIApplication, IWinRTObject, IDynamicInterfaceCastable, IEquatable<Application>, IPlatformApplication Inheritance object Application MauiWinUIApplication App Implements IWinRTObject IDynamicInterfaceCastable IEquatable<Application> IPlatformApplication Inherited Members MauiWinUIApplication.OnLaunched(LaunchActivatedEventArgs) MauiWinUIApplication.Current MauiWinUIApplication.LaunchActivatedEventArgs MauiWinUIApplication.Services MauiWinUIApplication.Application Application.As<I>() Application.Start(ApplicationInitializationCallback) Application.LoadComponent(object, Uri) Application.LoadComponent(object, Uri, ComponentResourceLocation) Application.FromAbi(nint) Application.Equals(Application) Application.Equals(object) Application.GetHashCode() Application.Exit() Application.IsOverridableInterface(Guid) Application.DebugSettings Application.DispatcherShutdownMode Application.FocusVisualKind Application.HighContrastAdjustment Application.RequestedTheme Application.Resources Application.UnhandledException Application.ResourceManagerRequested object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors App() Initializes the singleton application object. This is the first line of authored code executed, and as such is the logical equivalent of main() or WinMain(). public App() Methods CreateMauiApp() When overridden in a derived class, creates the MauiApp to be used in this application. Typically a MauiApp is created by calling CreateBuilder(bool), configuring the returned MauiAppBuilder, and returning the built app by calling Build(). protected override MauiApp CreateMauiApp() Returns MauiApp The built MauiApp. InitializeComponent() InitializeComponent() public void InitializeComponent()"
  },
  "api/Caesar.App.WinUI.Program.html": {
    "href": "api/Caesar.App.WinUI.Program.html",
    "title": "Class Program | docfx docfx.json --serve",
    "keywords": "Class Program Namespace Caesar.App.WinUI Assembly Caesar.App.dll Program class public static class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Caesar.App.WinUI.html": {
    "href": "api/Caesar.App.WinUI.html",
    "title": "Namespace Caesar.App.WinUI | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.App.WinUI Classes App Provides application-specific behavior to supplement the default Application class. Program Program class"
  },
  "api/Caesar.App.html": {
    "href": "api/Caesar.App.html",
    "title": "Namespace Caesar.App | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.App Classes App AppShell MauiProgram"
  },
  "api/Caesar.Core.DTOs.MenuItemDto.html": {
    "href": "api/Caesar.Core.DTOs.MenuItemDto.html",
    "title": "Class MenuItemDto | docfx docfx.json --serve",
    "keywords": "Class MenuItemDto Namespace Caesar.Core.DTOs Assembly Caesar.Core.dll public class MenuItemDto Inheritance object MenuItemDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Category public string Category { get; set; } Property Value string Description public string Description { get; set; } Property Value string Id public int Id { get; set; } Property Value int ImageUrl public string? ImageUrl { get; set; } Property Value string Name public string Name { get; set; } Property Value string Price public decimal Price { get; set; } Property Value decimal"
  },
  "api/Caesar.Core.DTOs.ReservationDto.html": {
    "href": "api/Caesar.Core.DTOs.ReservationDto.html",
    "title": "Class ReservationDto | docfx docfx.json --serve",
    "keywords": "Class ReservationDto Namespace Caesar.Core.DTOs Assembly Caesar.Core.dll public class ReservationDto Inheritance object ReservationDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ContactNumber public string ContactNumber { get; set; } Property Value string CustomerName public string CustomerName { get; set; } Property Value string Date public DateTime Date { get; set; } Property Value DateTime Id public int Id { get; set; } Property Value int NumberOfGuests public int NumberOfGuests { get; set; } Property Value int Time public TimeSpan Time { get; set; } Property Value TimeSpan"
  },
  "api/Caesar.Core.DTOs.html": {
    "href": "api/Caesar.Core.DTOs.html",
    "title": "Namespace Caesar.Core.DTOs | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.Core.DTOs Classes MenuItemDto ReservationDto"
  },
  "api/Caesar.Core.Entities.MenuItem.html": {
    "href": "api/Caesar.Core.Entities.MenuItem.html",
    "title": "Class MenuItem | docfx docfx.json --serve",
    "keywords": "Class MenuItem Namespace Caesar.Core.Entities Assembly Caesar.Core.dll public class MenuItem Inheritance object MenuItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Category public string Category { get; set; } Property Value string Description public string Description { get; set; } Property Value string Id public int Id { get; set; } Property Value int ImageUrl public string? ImageUrl { get; set; } Property Value string Name public string Name { get; set; } Property Value string Price public decimal Price { get; set; } Property Value decimal"
  },
  "api/Caesar.Core.Entities.Reservation.html": {
    "href": "api/Caesar.Core.Entities.Reservation.html",
    "title": "Class Reservation | docfx docfx.json --serve",
    "keywords": "Class Reservation Namespace Caesar.Core.Entities Assembly Caesar.Core.dll public class Reservation Inheritance object Reservation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ContactNumber public string ContactNumber { get; set; } Property Value string CustomerName public string CustomerName { get; set; } Property Value string Date public DateTime Date { get; set; } Property Value DateTime Id public int Id { get; set; } Property Value int NumberOfGuests public int NumberOfGuests { get; set; } Property Value int Time public TimeSpan Time { get; set; } Property Value TimeSpan"
  },
  "api/Caesar.Core.Entities.User.html": {
    "href": "api/Caesar.Core.Entities.User.html",
    "title": "Class User | docfx docfx.json --serve",
    "keywords": "Class User Namespace Caesar.Core.Entities Assembly Caesar.Core.dll public class User Inheritance object User Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public int Id { get; set; } Property Value int PasswordHash public string PasswordHash { get; set; } Property Value string Role public string Role { get; set; } Property Value string Username public string Username { get; set; } Property Value string"
  },
  "api/Caesar.Core.Entities.html": {
    "href": "api/Caesar.Core.Entities.html",
    "title": "Namespace Caesar.Core.Entities | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.Core.Entities Classes MenuItem Reservation User"
  },
  "api/Caesar.Core.Interfaces.IAuthService.html": {
    "href": "api/Caesar.Core.Interfaces.IAuthService.html",
    "title": "Interface IAuthService | docfx docfx.json --serve",
    "keywords": "Interface IAuthService Namespace Caesar.Core.Interfaces Assembly Caesar.Core.dll public interface IAuthService Methods GenerateJwtToken(User) string GenerateJwtToken(User user) Parameters user User Returns string LoginAsync(string, string) Task<(bool IsSuccess, string Token)> LoginAsync(string username, string password) Parameters username string password string Returns Task<(bool IsSuccess, string Token)>"
  },
  "api/Caesar.Core.Interfaces.IMenuItemRepository.html": {
    "href": "api/Caesar.Core.Interfaces.IMenuItemRepository.html",
    "title": "Interface IMenuItemRepository | docfx docfx.json --serve",
    "keywords": "Interface IMenuItemRepository Namespace Caesar.Core.Interfaces Assembly Caesar.Core.dll public interface IMenuItemRepository Methods AddAsync(MenuItem) Task<MenuItem> AddAsync(MenuItem menuItem) Parameters menuItem MenuItem Returns Task<MenuItem> DeleteAsync(int) Task DeleteAsync(int id) Parameters id int Returns Task GetAllAsync() Task<IEnumerable<MenuItem>> GetAllAsync() Returns Task<IEnumerable<MenuItem>> GetByIdAsync(int) Task<MenuItem> GetByIdAsync(int id) Parameters id int Returns Task<MenuItem> UpdateAsync(MenuItem) Task UpdateAsync(MenuItem menuItem) Parameters menuItem MenuItem Returns Task"
  },
  "api/Caesar.Core.Interfaces.IMenuItemService.html": {
    "href": "api/Caesar.Core.Interfaces.IMenuItemService.html",
    "title": "Interface IMenuItemService | docfx docfx.json --serve",
    "keywords": "Interface IMenuItemService Namespace Caesar.Core.Interfaces Assembly Caesar.Core.dll public interface IMenuItemService Methods CreateMenuItemAsync(MenuItemDto) Task<MenuItemDto> CreateMenuItemAsync(MenuItemDto menuItemDto) Parameters menuItemDto MenuItemDto Returns Task<MenuItemDto> DeleteMenuItemAsync(int) Task DeleteMenuItemAsync(int id) Parameters id int Returns Task GetAllMenuItemsAsync() Task<IEnumerable<MenuItemDto>> GetAllMenuItemsAsync() Returns Task<IEnumerable<MenuItemDto>> GetMenuItemAsync(int) Task<MenuItemDto> GetMenuItemAsync(int id) Parameters id int Returns Task<MenuItemDto> UpdateMenuItemAsync(MenuItemDto) Task UpdateMenuItemAsync(MenuItemDto menuItemDto) Parameters menuItemDto MenuItemDto Returns Task"
  },
  "api/Caesar.Core.Interfaces.IReservationRepository.html": {
    "href": "api/Caesar.Core.Interfaces.IReservationRepository.html",
    "title": "Interface IReservationRepository | docfx docfx.json --serve",
    "keywords": "Interface IReservationRepository Namespace Caesar.Core.Interfaces Assembly Caesar.Core.dll public interface IReservationRepository Methods AddAsync(Reservation) Task<Reservation> AddAsync(Reservation reservation) Parameters reservation Reservation Returns Task<Reservation> DeleteAsync(int) Task DeleteAsync(int id) Parameters id int Returns Task GetAllAsync() Task<IEnumerable<Reservation>> GetAllAsync() Returns Task<IEnumerable<Reservation>> GetByIdAsync(int) Task<Reservation> GetByIdAsync(int id) Parameters id int Returns Task<Reservation> UpdateAsync(Reservation) Task UpdateAsync(Reservation reservation) Parameters reservation Reservation Returns Task"
  },
  "api/Caesar.Core.Interfaces.IReservationService.html": {
    "href": "api/Caesar.Core.Interfaces.IReservationService.html",
    "title": "Interface IReservationService | docfx docfx.json --serve",
    "keywords": "Interface IReservationService Namespace Caesar.Core.Interfaces Assembly Caesar.Core.dll public interface IReservationService Methods CreateReservationAsync(ReservationDto) Task<ReservationDto> CreateReservationAsync(ReservationDto reservationDto) Parameters reservationDto ReservationDto Returns Task<ReservationDto> DeleteReservationAsync(int) Task DeleteReservationAsync(int id) Parameters id int Returns Task GetAllReservationsAsync() Task<IEnumerable<ReservationDto>> GetAllReservationsAsync() Returns Task<IEnumerable<ReservationDto>> GetReservationAsync(int) Task<ReservationDto> GetReservationAsync(int id) Parameters id int Returns Task<ReservationDto> UpdateReservationAsync(ReservationDto) Task UpdateReservationAsync(ReservationDto reservationDto) Parameters reservationDto ReservationDto Returns Task"
  },
  "api/Caesar.Core.Interfaces.html": {
    "href": "api/Caesar.Core.Interfaces.html",
    "title": "Namespace Caesar.Core.Interfaces | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.Core.Interfaces Interfaces IAuthService IMenuItemRepository IMenuItemService IReservationRepository IReservationService"
  },
  "api/Caesar.Core.Services.MenuItemService.html": {
    "href": "api/Caesar.Core.Services.MenuItemService.html",
    "title": "Class MenuItemService | docfx docfx.json --serve",
    "keywords": "Class MenuItemService Namespace Caesar.Core.Services Assembly Caesar.Core.dll public class MenuItemService : IMenuItemService Inheritance object MenuItemService Implements IMenuItemService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MenuItemService(IMenuItemRepository) public MenuItemService(IMenuItemRepository repository) Parameters repository IMenuItemRepository Methods CreateMenuItemAsync(MenuItemDto) public Task<MenuItemDto> CreateMenuItemAsync(MenuItemDto menuItemDto) Parameters menuItemDto MenuItemDto Returns Task<MenuItemDto> DeleteMenuItemAsync(int) public Task DeleteMenuItemAsync(int id) Parameters id int Returns Task GetAllMenuItemsAsync() public Task<IEnumerable<MenuItemDto>> GetAllMenuItemsAsync() Returns Task<IEnumerable<MenuItemDto>> GetMenuItemAsync(int) public Task<MenuItemDto> GetMenuItemAsync(int id) Parameters id int Returns Task<MenuItemDto> UpdateMenuItemAsync(MenuItemDto) public Task UpdateMenuItemAsync(MenuItemDto menuItemDto) Parameters menuItemDto MenuItemDto Returns Task"
  },
  "api/Caesar.Core.Services.ReservationService.html": {
    "href": "api/Caesar.Core.Services.ReservationService.html",
    "title": "Class ReservationService | docfx docfx.json --serve",
    "keywords": "Class ReservationService Namespace Caesar.Core.Services Assembly Caesar.Core.dll public class ReservationService : IReservationService Inheritance object ReservationService Implements IReservationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ReservationService(IReservationRepository) public ReservationService(IReservationRepository repository) Parameters repository IReservationRepository Methods CreateReservationAsync(ReservationDto) public Task<ReservationDto> CreateReservationAsync(ReservationDto reservationDto) Parameters reservationDto ReservationDto Returns Task<ReservationDto> DeleteReservationAsync(int) public Task DeleteReservationAsync(int id) Parameters id int Returns Task GetAllReservationsAsync() public Task<IEnumerable<ReservationDto>> GetAllReservationsAsync() Returns Task<IEnumerable<ReservationDto>> GetReservationAsync(int) public Task<ReservationDto> GetReservationAsync(int id) Parameters id int Returns Task<ReservationDto> UpdateReservationAsync(ReservationDto) public Task UpdateReservationAsync(ReservationDto reservationDto) Parameters reservationDto ReservationDto Returns Task"
  },
  "api/Caesar.Core.Services.html": {
    "href": "api/Caesar.Core.Services.html",
    "title": "Namespace Caesar.Core.Services | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.Core.Services Classes MenuItemService ReservationService"
  },
  "api/Caesar.Infrastructure.Data.CaesarDbContext.html": {
    "href": "api/Caesar.Infrastructure.Data.CaesarDbContext.html",
    "title": "Class CaesarDbContext | docfx docfx.json --serve",
    "keywords": "Class CaesarDbContext Namespace Caesar.Infrastructure.Data Assembly Caesar.Infrastructure.dll Represents the Entity Framework database context for the application. Ð¡ontext is responsible for creating the database tables, setting field validations, and seeding the initial admin user after the tables are created. public class CaesarDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext CaesarDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CaesarDbContext(DbContextOptions<CaesarDbContext>) Initializes a new instance of the CaesarDbContext class with the specified options. public CaesarDbContext(DbContextOptions<CaesarDbContext> options) Parameters options DbContextOptions<CaesarDbContext> The options to be used by a DbContext. Properties MenuItems Gets or sets the MenuItems table. public DbSet<MenuItem> MenuItems { get; set; } Property Value DbSet<MenuItem> Reservations Gets or sets the Reservations table. public DbSet<Reservation> Reservations { get; set; } Property Value DbSet<Reservation> Users Gets or sets the Users table. public DbSet<User> Users { get; set; } Property Value DbSet<User> Methods OnModelCreating(ModelBuilder) Configures the schema needed for the context. protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The builder being used to construct the model for this context."
  },
  "api/Caesar.Infrastructure.Data.html": {
    "href": "api/Caesar.Infrastructure.Data.html",
    "title": "Namespace Caesar.Infrastructure.Data | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.Infrastructure.Data Classes CaesarDbContext Represents the Entity Framework database context for the application. Ð¡ontext is responsible for creating the database tables, setting field validations, and seeding the initial admin user after the tables are created."
  },
  "api/Caesar.Infrastructure.InfrastructureServiceRegistration.html": {
    "href": "api/Caesar.Infrastructure.InfrastructureServiceRegistration.html",
    "title": "Class InfrastructureServiceRegistration | docfx docfx.json --serve",
    "keywords": "Class InfrastructureServiceRegistration Namespace Caesar.Infrastructure Assembly Caesar.Infrastructure.dll public static class InfrastructureServiceRegistration Inheritance object InfrastructureServiceRegistration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddInfrastructureServices(IServiceCollection, IConfiguration) public static IServiceCollection AddInfrastructureServices(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection configuration IConfiguration Returns IServiceCollection"
  },
  "api/Caesar.Infrastructure.Migrations.AddImageUrlToMenuItem.html": {
    "href": "api/Caesar.Infrastructure.Migrations.AddImageUrlToMenuItem.html",
    "title": "Class AddImageUrlToMenuItem | docfx docfx.json --serve",
    "keywords": "Class AddImageUrlToMenuItem Namespace Caesar.Infrastructure.Migrations Assembly Caesar.Infrastructure.dll A base class inherited by each EF Core migration. [DbContext(typeof(CaesarDbContext))] [Migration(\"20240922202044_AddImageUrlToMenuItem\")] public class AddImageUrlToMenuItem : Migration Inheritance object Migration AddImageUrlToMenuItem Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Caesar.Infrastructure.Migrations.AllowNullImageUrl.html": {
    "href": "api/Caesar.Infrastructure.Migrations.AllowNullImageUrl.html",
    "title": "Class AllowNullImageUrl | docfx docfx.json --serve",
    "keywords": "Class AllowNullImageUrl Namespace Caesar.Infrastructure.Migrations Assembly Caesar.Infrastructure.dll A base class inherited by each EF Core migration. [DbContext(typeof(CaesarDbContext))] [Migration(\"20240922202621_AllowNullImageUrl\")] public class AllowNullImageUrl : Migration Inheritance object Migration AllowNullImageUrl Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Caesar.Infrastructure.Migrations.InitialCreate.html": {
    "href": "api/Caesar.Infrastructure.Migrations.InitialCreate.html",
    "title": "Class InitialCreate | docfx docfx.json --serve",
    "keywords": "Class InitialCreate Namespace Caesar.Infrastructure.Migrations Assembly Caesar.Infrastructure.dll A base class inherited by each EF Core migration. [DbContext(typeof(CaesarDbContext))] [Migration(\"20240922175130_InitialCreate\")] public class InitialCreate : Migration Inheritance object Migration InitialCreate Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Caesar.Infrastructure.Migrations.html": {
    "href": "api/Caesar.Infrastructure.Migrations.html",
    "title": "Namespace Caesar.Infrastructure.Migrations | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.Infrastructure.Migrations Classes AddImageUrlToMenuItem A base class inherited by each EF Core migration. AllowNullImageUrl A base class inherited by each EF Core migration. InitialCreate A base class inherited by each EF Core migration."
  },
  "api/Caesar.Infrastructure.Repositories.MenuItemRepository.html": {
    "href": "api/Caesar.Infrastructure.Repositories.MenuItemRepository.html",
    "title": "Class MenuItemRepository | docfx docfx.json --serve",
    "keywords": "Class MenuItemRepository Namespace Caesar.Infrastructure.Repositories Assembly Caesar.Infrastructure.dll public class MenuItemRepository : IMenuItemRepository Inheritance object MenuItemRepository Implements IMenuItemRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MenuItemRepository(CaesarDbContext) public MenuItemRepository(CaesarDbContext context) Parameters context CaesarDbContext Methods AddAsync(MenuItem) public Task<MenuItem> AddAsync(MenuItem menuItem) Parameters menuItem MenuItem Returns Task<MenuItem> DeleteAsync(int) public Task DeleteAsync(int id) Parameters id int Returns Task GetAllAsync() public Task<IEnumerable<MenuItem>> GetAllAsync() Returns Task<IEnumerable<MenuItem>> GetByIdAsync(int) public Task<MenuItem> GetByIdAsync(int id) Parameters id int Returns Task<MenuItem> UpdateAsync(MenuItem) public Task UpdateAsync(MenuItem menuItem) Parameters menuItem MenuItem Returns Task"
  },
  "api/Caesar.Infrastructure.Repositories.ReservationRepository.html": {
    "href": "api/Caesar.Infrastructure.Repositories.ReservationRepository.html",
    "title": "Class ReservationRepository | docfx docfx.json --serve",
    "keywords": "Class ReservationRepository Namespace Caesar.Infrastructure.Repositories Assembly Caesar.Infrastructure.dll public class ReservationRepository : IReservationRepository Inheritance object ReservationRepository Implements IReservationRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ReservationRepository(CaesarDbContext) public ReservationRepository(CaesarDbContext context) Parameters context CaesarDbContext Methods AddAsync(Reservation) public Task<Reservation> AddAsync(Reservation reservation) Parameters reservation Reservation Returns Task<Reservation> DeleteAsync(int) public Task DeleteAsync(int id) Parameters id int Returns Task GetAllAsync() public Task<IEnumerable<Reservation>> GetAllAsync() Returns Task<IEnumerable<Reservation>> GetByIdAsync(int) public Task<Reservation> GetByIdAsync(int id) Parameters id int Returns Task<Reservation> UpdateAsync(Reservation) public Task UpdateAsync(Reservation reservation) Parameters reservation Reservation Returns Task"
  },
  "api/Caesar.Infrastructure.Repositories.html": {
    "href": "api/Caesar.Infrastructure.Repositories.html",
    "title": "Namespace Caesar.Infrastructure.Repositories | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.Infrastructure.Repositories Classes MenuItemRepository ReservationRepository"
  },
  "api/Caesar.Infrastructure.Services.AuthService.html": {
    "href": "api/Caesar.Infrastructure.Services.AuthService.html",
    "title": "Class AuthService | docfx docfx.json --serve",
    "keywords": "Class AuthService Namespace Caesar.Infrastructure.Services Assembly Caesar.Infrastructure.dll public class AuthService : IAuthService Inheritance object AuthService Implements IAuthService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthService(IConfiguration, CaesarDbContext) public AuthService(IConfiguration configuration, CaesarDbContext context) Parameters configuration IConfiguration context CaesarDbContext Properties IsAuthenticated public bool IsAuthenticated { get; } Property Value bool Methods ClearTokenAsync() public Task ClearTokenAsync() Returns Task GenerateJwtToken(User) public string GenerateJwtToken(User user) Parameters user User Returns string GetTokenAsync() public Task<string> GetTokenAsync() Returns Task<string> LoginAsync(string, string) public Task<(bool IsSuccess, string Token)> LoginAsync(string username, string password) Parameters username string password string Returns Task<(bool IsSuccess, string Token)> SetTokenAsync(string) public Task SetTokenAsync(string token) Parameters token string Returns Task"
  },
  "api/Caesar.Infrastructure.Services.html": {
    "href": "api/Caesar.Infrastructure.Services.html",
    "title": "Namespace Caesar.Infrastructure.Services | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.Infrastructure.Services Classes AuthService"
  },
  "api/Caesar.Infrastructure.html": {
    "href": "api/Caesar.Infrastructure.html",
    "title": "Namespace Caesar.Infrastructure | docfx docfx.json --serve",
    "keywords": "Namespace Caesar.Infrastructure Classes InfrastructureServiceRegistration"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | docfx docfx.json --serve",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}